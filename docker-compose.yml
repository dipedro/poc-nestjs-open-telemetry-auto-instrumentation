version: "3.7"
services:
  opentelemetry-collector:
    image: otel/opentelemetry-collector-contrib:0.100.0
    container_name: opentelemetry-collector
    ports:
      - 4317:4317
      - 4318:4318
      - 13133:13133
      - 8889:8889
      - 8888:8888
    volumes:
      - ./config/config.yml:/etc/opentelemetry-collector.yml
    command:
      - "--config=/etc/opentelemetry-collector.yml"
    networks:
      - cloud-native-observability
    depends_on:
      - jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.55
    container_name: jaeger
    command:
      - "--memory.max-traces=5000"
      - "--query.base-path=/jaeger/ui"
    deploy:
      resources:
        limits:
          memory: 400M
    restart: unless-stopped
    ports:
      - 16686:16686         # Jaeger UI
      - 4317       # Jaeger Collector
      - 4318       # Jaeger Collector Thrift
    networks:
      - cloud-native-observability
  db: # Banco de dados
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinhadb
    ports:
      - "5432:5432"
    volumes:
      - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
    networks:
      - cloud-native-observability
  api:
    container_name: api
    build: .
    restart: always
    hostname: api
    env_file:
      - .env
    environment:
      - PORT=3000
    ports:
      - "3000:3000"
    networks:
      - cloud-native-observability
  api2:
    container_name: api2
    build: .
    restart: always
    hostname: api2
    env_file:
      - .env
    environment:
      - PORT=3001
    ports:
      - "3001:3001"
    networks:
      - cloud-native-observability
  nginx:
    image: public.ecr.aws/docker/library/nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - api2
    networks:
      - cloud-native-observability
networks:
  cloud-native-observability:
